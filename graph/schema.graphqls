type User {
  id: ID!
  userID: ID!
  userImage: String
  firstName: String
  lastName: String
  email: String
  phone: String
  password: String
  city: String
  type: String
  country: String
  balance: [Balance]
  investment: [Investment]
  credits: [Credit]
  reference: [Reference]
  assets: [Asset]
  history: [History]
  transactions: [Transaction]
  notification: [Notification]
}

type Balance {
  id: ID!
  userID: ID!
  amount: Float
  timestamp: String
}

type Investment {
  id: ID!
  userID: ID!
  amount: Float
  timestamp: String
}


type Credit {
  id: ID!
  userID: ID!
  amount: Float
  timestamp: String
}

type Reference {
  id: ID!
  userID: ID!
  amount: Float
  timestamp: String
}

type Referral {
  id: ID!
  userID: ID!
  link: String
}

type Asset {
  id: ID!
  userID: ID!
  name: String 
  amount: Float
}

type History {
  id: ID!
  userID: ID!
  entityType: String
  actionType: String
  changedData: String
  timestamp: String
}

type Transaction {
  id: ID!
  userID: ID!
  detail: String
  amount: Float
}

type Notification {
  id: ID!
  userid: ID!
  message: String!
  seen: Boolean!
  timestamp: String
}

type Verify{
  id: ID!  
  uniqueverifier: String!
  email: String!
}

type Plan {
  id: ID!
  title: String
  amount: String
  return: String
  duration: String
  referalBonus: String
  description: [Description]
}

type Description {
  id: ID!
  point: String
}


type Query {
  getAllUsers: [User]
  getUser(userID: ID!): User
  getAllBalances: [Balance]
  getBalance(userID: ID!): Balance
  getAllInvestments: [Investment]
  getInvestment(userID: ID!): Investment
  getAllCredits: [Credit]
  getCredit(userID: ID!): Credit
  getAllReferences: [Reference]
  getReference(userID: ID!): Reference
  getAllReferral: [Referral]
  getReferral(userID: ID): Referral
  getAllAssets: [Asset]
  getAsset(assetID: ID!): Asset
  getUserAssets(userID: ID!): [Asset]
  getAllHistory: [History]
  getHistory(id: ID!): History
  getUserHistory(userID: ID!): [History]
  getAllTransactions: [Transaction]
  getTransaction(id: ID!): Transaction
  getUserTransactions(userID: ID!): [Transaction]
  getAllNotification: [Notification]
  getUserNotifications(userID: String!): [Notification]
  getAllUnverifiedEmails:[Verify]
  getUnverifiedEmail(email: String!): Verify
  getAllPlans: [Plan]
  getPlan(planID: ID!): Plan
}

input CreateUserInput {
  userImage: String
  firstName: String
  lastName: String
  email: String
  phone: String
  password: String
  city: String
  country: String
  type: String
}

input CreatePlanInput {
  title: String!
  amount: String!
  return: String!
  duration: String!
  referalBonus: String!
  description: [CreateDescriptionInput]
}

input CreateDescriptionInput {
  point: String!
}

input UpdatePlanInput {
  title: String
  amount: String
  return: String
  duration: String
  referalBonus: String
  description: [CreateDescriptionInput]
}

type Mutation {
  createUser(input: CreateUserInput!): User
  login(email: String!, password: String!): String!
  editUser(userID: ID!, input: CreateUserInput!): User
  deleteAllUsers: Boolean
  deleteUser(userID: ID!): Boolean
  deleteBalance(id: ID!): Boolean
  deleteInvestment(id: ID!): Boolean
  deleteCredit(id: ID!): Boolean
  deleteReference(id: ID!): Boolean
  deleteAllHistory: Boolean
  deleteHistory(id: ID!): Boolean
  deleteAllTransactions: Boolean
  deleteTransaction(id: ID!): Boolean
  createNotification(userID: ID!, message: String!): Notification!
  markNotificationAsSeen(id: String!): Notification!
  deleteAllUnverifiedEmails: [Verify]
  deleteUnverifiedEmail(email: String!): Verify
  createPlan(input: CreatePlanInput!): Plan
  updatePlan(planID: ID!, input: UpdatePlanInput!): Plan
  deletePlan(planID: ID!): Boolean
}
